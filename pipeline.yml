Description: This template hydrates a machine learning pipeline.
Outputs:
  InputBucket:
    Description: Name of input S3 bucket
    Value: !Ref 'InputBucket'
  OutputBucket:
    Description: Name of output S3 bucket
    Value: !Ref 'OutputBucket'
  Repository:
    Description: ML repo
    Value: !Ref 'Repository'
Parameters:
  LambdaMemorySize:
    AllowedValues:
      - 128
      - 192
      - 256
      - 320
      - 384
      - 448
      - 512
      - 576
      - 640
      - 704
      - 768
      - 832
      - 896
      - 960
      - 1024
      - 1088
      - 1152
      - 1216
      - 1280
      - 1344
      - 1408
      - 1472
      - 1536
      - 1600
      - 1664
      - 1728
      - 1792
      - 1856
      - 1920
      - 1984
      - 2048
      - 2112
      - 2176
      - 2240
      - 2304
      - 2368
      - 2432
      - 2496
      - 2560
      - 2624
      - 2688
      - 2752
      - 2816
      - 2880
      - 2944
      - 3008
    Default: '128'
    Description: Amount of memory to allocate to the Lambda Function
    Type: Number
  LambdaTimeout:
    Default: '60'
    Description: Timeout in seconds for the Lambda function
    Type: Number
Resources:
  007038732177cloudMlPipelineBuild:
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: us-west-2
          - Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: 007038732177
          - Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: 007038732177cloudmlpipelineregistry
          - Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: latest
          - Name: CODE_COMMIT_REPO
            Type: PLAINTEXT
            Value: 007038732177cloudMlPipelineRepo
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
      Name: 007038732177cloudMlPipelineBuild
      ServiceRole: !GetAtt 'CodepipelineExecutionRole.Arn'
      Source:
        Type: CODEPIPELINE
    Type: AWS::CodeBuild::Project
  007038732177cloudMlPipelinePipeline:
    Properties:
      ArtifactStore:
        Location: 007038732177cloudmlpipelineartifactstore
        Type: S3
      RoleArn: !GetAtt 'CodepipelineExecutionRole.Arn'
      Stages:
        - Actions:
            - ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                BranchName: master
                PollForSourceChanges: 'false'
                RepositoryName: 007038732177cloudMlPipelineRepo
              InputArtifacts: []
              Name: Source
              OutputArtifacts:
                - Name: source_action_output
              RunOrder: 1
          Name: Source
        - Actions:
            - ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: 007038732177cloudMlPipelineBuild
              InputArtifacts:
                - Name: source_action_output
              Name: Build
              OutputArtifacts:
                - Name: build_action_output
              RunOrder: 1
          Name: Build
        - Actions:
            - ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              Configuration:
                FunctionName: sageDispatch
              InputArtifacts:
                - Name: source_action_output
              Name: Train
              OutputArtifacts: []
              RunOrder: 1
          Name: Train
    Type: AWS::CodePipeline::Pipeline
  007038732177cloudMlPipelineRegistry:
    Properties:
      RepositoryName: 007038732177cloudmlpipelineregistry
    Type: AWS::ECR::Repository
  CloudWatchEventExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action: codepipeline:StartPipelineExecution
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: pipelineTargetRulePolicy
    Type: AWS::IAM::Role
  CodePipelineBucket:
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !GetAtt 'cloudMlPipelineKey.Arn'
              SSEAlgorithm: aws:kms
      BucketName: 007038732177cloudmlpipelineartifactstore
    Type: AWS::S3::Bucket
  CodepipelineExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - kms:Decrypt
                Effect: Allow
                Resource: !GetAtt 'cloudMlPipelineKey.Arn'
              - Action:
                  - lambda:listfunctions
                Effect: Allow
                Resource: '*'
              - Action:
                  - lambda:invokefunction
                  - lambda:listfunctions
                Effect: Allow
                Resource:
                  - !GetAtt 'sageDispatch.Arn'
              - Action:
                  - s3:ListBucket
                  - s3:GetBucketPolicy
                  - s3:GetObjectAcl
                  - s3:PutObjectAcl
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectTagging
                Effect: Allow
                Resource:
                  - !Join
                    - ''
                    - - !GetAtt 'InputBucket.Arn'
                      - /*
                  - !Join
                    - ''
                    - - !GetAtt 'OutputBucket.Arn'
                      - /*
                  - !Join
                    - ''
                    - - !GetAtt 'CodePipelineBucket.Arn'
                      - /*
              - Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Effect: Allow
                Resource:
                  - !GetAtt 'Repository.Arn'
              - Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - ecr:GetAuthorizationToken
                  - iam:PassRole
                Effect: Allow
                Resource: '*'
              - Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                Effect: Allow
                Resource: !Join
                  - ''
                  - - 'arn:aws:ecr:'
                    - us-west-2
                    - ':'
                    - 007038732177
                    - :repository/
                    - 007038732177cloudmlpipelineregistry
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:DescribeLogStreams
                Effect: Allow
                Resource:
                  - arn:aws:logs:*:*:*
            Version: '2012-10-17'
          PolicyName: CodepipelineExecutionRole
    Type: AWS::IAM::Role
  InputBucket:
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !GetAtt 'cloudMlPipelineKey.Arn'
              SSEAlgorithm: aws:kms
      BucketName: 007038732177cloudmlpipelineinput
    Type: AWS::S3::Bucket
  LambdaExecutionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
              - Action:
                  - logs:*
                Effect: Allow
                Resource: arn:aws:logs:*:*:*
              - Action:
                  - kms:Decrypt
                Effect: Allow
                Resource: !GetAtt 'cloudMlPipelineKey.Arn'
              - Action:
                  - codepipeline:PutJobFailureResult
                  - codepipeline:PutJobSuccessResult
                Effect: Allow
                Resource: '*'
              - Action:
                  - s3:GetObject
                Effect: Allow
                Resource: !Join
                  - ''
                  - - !GetAtt 'CodePipelineBucket.Arn'
                    - /*
              - Action:
                  - sagemaker:CreateTrainingJob
                Effect: Allow
                Resource: '*'
              - Action:
                  - iam:PassRole
                Effect: Allow
                Resource: '*'
            Version: '2012-10-17'
          PolicyName: sageDispatch
    Type: AWS::IAM::Role
  OutputBucket:
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: !GetAtt 'cloudMlPipelineKey.Arn'
              SSEAlgorithm: aws:kms
      BucketName: 007038732177cloudmlpipelineoutput
    Type: AWS::S3::Bucket
  Repository:
    Properties:
      RepositoryDescription: ML repo
      RepositoryName: 007038732177cloudMlPipelineRepo
    Type: AWS::CodeCommit::Repository
  cloudMlPipelineKey:
    Properties:
      Description: cloudMlPipelineKey
      EnableKeyRotation: 'true'
      Enabled: 'true'
      KeyPolicy:
        Id: project_key
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::007038732177:root
            Resource: '*'
            Sid: Enable IAM User Permissions
        Version: '2012-10-17'
    Type: AWS::KMS::Key
  mlpipelinerule:
    Properties:
      Description: Triggers codepipeline
      EventPattern:
        detail:
          referenceName:
            - master
          referenceType:
            - branch
        detail-type:
          - Codecommit Repository State Change
        resources:
          - !GetAtt 'Repository.Arn'
        source:
          - aws.codecommit
      State: ENABLED
      Targets:
        - Arn: arn:aws:codepipeline:us-west-2:007038732177:007038732177cloudMlPipelinePipeline
          Id: mlTargert1
          RoleArn: !GetAtt 'CloudWatchEventExecutionRole.Arn'
    Type: AWS::Events::Rule
  sageDispatch:
    Properties:
      Code:
        S3Bucket: 007038732177lambda
        S3Key: sageDispatch.zip
      Environment:
        Variables:
          App_bundle: source_action_output
      FunctionName: sageDispatch
      Handler: sageDispatch.lambda_handler
      Role: !GetAtt 'LambdaExecutionRole.Arn'
      Runtime: python2.7
      Timeout: 300
    Type: AWS::Lambda::Function