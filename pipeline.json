{
    "Description": "This template hydrates a machine learning pipeline.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "General project configuration"
                    },
                    "Parameters": [
                        "accountparameter",
                        "regionparameter",
                        "projectnameparameter"
                    ]
                },
                {
                    "Label": {
                        "default": "Encryption"
                    },
                    "Parameters": [
                        "projectkmskeyparameter"
                    ]
                },
                {
                    "Label": {
                        "default": "Input and output s3 buckets for training, testing, and evaultion data."
                    },
                    "Parameters": [
                        "inputbucketparameter",
                        "outputbucketparameter"
                    ]
                },
                {
                    "Label": {
                        "default": "CI/CD Pipeline information"
                    },
                    "Parameters": [
                        "pipelinenameparameter",
                        "reponameparameter",
                        "mldockerregistrynameparameter"
                    ]
                },
                {
                    "Label": {
                        "default": "Lambda function information"
                    },
                    "Parameters": [
                        "lambdafunctionbucketparameter",
                        "loglevelparameter"
                    ]
                }
            ],
            "ParameterLabels": {
                "accountparameter": {
                    "default": "Account ID"
                },
                "inputbucketparameter": {
                    "default": "Model input bucket name"
                },
                "lambdafunctionbucketparameter": {
                    "default": "Name of the S3 bucket that contains the lambda function zip file called sageDispatch.zip."
                },
                "loglevelparameter": {
                    "default": "The Lambda logging level to use for this function. Default is set to Warning."
                },
                "mldockerregistrynameparameter": {
                    "default": "Name of the ECR registry"
                },
                "outputbucketparameter": {
                    "default": "Model output bucket name"
                },
                "pipelinenameparameter": {
                    "default": "Name of the CodePipeline pipeline"
                },
                "projectkmskeyparameter": {
                    "default": "KMS key name"
                },
                "projectnameparameter": {
                    "default": "Project name"
                },
                "regionparameter": {
                    "default": "Region"
                },
                "reponameparameter": {
                    "default": "Name of the CodeCommit repo"
                }
            }
        }
    },
    "Parameters": {
        "accountparameter": {
            "Description": "This is the name that will be used as a prefix to all of the assets generated by this cloudformation template.",
            "MinValue": "12",
            "Type": "Number"
        },
        "inputbucketparameter": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Default": "inputbucket",
            "Description": "This is the name of the bucket that holds your machine learning training and testing datasets.",
            "MinLength": "1",
            "Type": "String"
        },
        "lambdafunctionbucketparameter": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Default": "lambdabucket",
            "Description": "This is the name of the bucket that contains the lambda function used to send your model into SageMaker.",
            "MinLength": "1",
            "Type": "String"
        },
        "loglevelparameter": {
            "AllowedValues": [
                "DEBUG",
                "INFO",
                "WARNING",
                "ERROR",
                "CRITICAL"
            ],
            "Default": "WARNING",
            "Description": "This is the logging parameter used for the lambda function used to send your model into SageMaker",
            "MinLength": "1",
            "Type": "String"
        },
        "mldockerregistrynameparameter": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Default": "mldockerrepo",
            "Description": "This is the name of the ecr registry used to contain the docker image with your model code.",
            "MinLength": "1",
            "Type": "String"
        },
        "outputbucketparameter": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Default": "outputbucket",
            "Description": "This is the name of the bucket that will receive the output of your machine learning training model.",
            "MinLength": "1",
            "Type": "String"
        },
        "pipelinenameparameter": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Default": "pipeline",
            "Description": "This is the name the pipeline that is going to move the model from the repo to training in sagemaker.",
            "MinLength": "1",
            "Type": "String"
        },
        "projectkmskeyparameter": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Default": "kmskey",
            "Description": "This kms key is used to encrypt both the input and output buckets.",
            "MinLength": "1",
            "Type": "String"
        },
        "projectnameparameter": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Default": "mlworkflow",
            "Description": "This is the name that will be used as a prefix to all of the assets generated by this cloudformation template.",
            "MinLength": "1",
            "Type": "String"
        },
        "regionparameter": {
            "Default": "us-west-2",
            "Description": "This is the region in which you are deploying this template.",
            "MinLength": "1",
            "Type": "String"
        },
        "reponameparameter": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "Default": "mlrepo",
            "Description": "This is the name of the code commit repo that will be watched to trigger the pipeline as the model is revised and commited.",
            "MinLength": "1",
            "Type": "String"
        }
    },
    "Resources": {
        "CloudWatchEventExecutionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "events.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": "codepipeline:StartPipelineExecution",
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:codepipeline:",
                                                {
                                                    "Ref": "regionparameter"
                                                },
                                                ":",
                                                {
                                                    "Ref": "accountparameter"
                                                },
                                                ":",
                                                {
                                                    "Ref": "pipeline"
                                                }
                                            ]
                                        ]
                                    }
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "pipelineTargetRulePolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "CodePipelineBucket": {
            "Properties": {
                "AccessControl": "Private",
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                },
                "BucketName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "accountparameter"
                            },
                            {
                                "Ref": "projectnameparameter"
                            },
                            "artifactstore"
                        ]
                    ]
                }
            },
            "Type": "AWS::S3::Bucket"
        },
        "CodepipelineExecutionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "codepipeline.amazonaws.com",
                                    "codebuild.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "kms:Decrypt"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "projectkey",
                                            "Arn"
                                        ]
                                    }
                                },
                                {
                                    "Action": [
                                        "lambda:listfunctions"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "lambda:invokefunction",
                                        "lambda:listfunctions"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "sageDispatch",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "s3:ListBucket",
                                        "s3:GetBucketPolicy",
                                        "s3:GetObjectAcl",
                                        "s3:PutObjectAcl",
                                        "s3:DeleteObject",
                                        "s3:GetObject",
                                        "s3:PutObject",
                                        "s3:PutObjectTagging"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "InputBucket",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "OutputBucket",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "CodePipelineBucket",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "codecommit:CancelUploadArchive",
                                        "codecommit:GetBranch",
                                        "codecommit:GetCommit",
                                        "codecommit:GetUploadArchiveStatus",
                                        "codecommit:UploadArchive"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "Repository",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "codebuild:BatchGetBuilds",
                                        "codebuild:StartBuild",
                                        "ecr:GetAuthorizationToken",
                                        "iam:PassRole"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:BatchGetImage",
                                        "ecr:BatchCheckLayerAvailability",
                                        "ecr:PutImage",
                                        "ecr:InitiateLayerUpload",
                                        "ecr:UploadLayerPart",
                                        "ecr:CompleteLayerUpload"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:ecr:",
                                                {
                                                    "Ref": "regionparameter"
                                                },
                                                ":",
                                                {
                                                    "Ref": "accountparameter"
                                                },
                                                ":repository/",
                                                {
                                                    "Ref": "mldockerregistrynameparameter"
                                                }
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:DescribeLogStreams"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "CodepipelineExecutionRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "InputBucket": {
            "Properties": {
                "AccessControl": "Private",
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "KMSMasterKeyID": {
                                    "Fn::GetAtt": [
                                        "projectkey",
                                        "Arn"
                                    ]
                                },
                                "SSEAlgorithm": "aws:kms"
                            }
                        }
                    ]
                },
                "BucketName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "accountparameter"
                            },
                            {
                                "Ref": "inputbucketparameter"
                            }
                        ]
                    ]
                },
                "VersioningConfiguration": {
                    "Status": "Enabled"
                }
            },
            "Type": "AWS::S3::Bucket"
        },
        "LambdaExecutionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "logs:*"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Action": [
                                        "kms:Decrypt"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "projectkey",
                                            "Arn"
                                        ]
                                    }
                                },
                                {
                                    "Action": [
                                        "codepipeline:PutJobFailureResult",
                                        "codepipeline:PutJobSuccessResult"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "codecommit:GetBranch"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "Repository",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "CodePipelineBucket",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "InputBucket",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "s3:GetObjectVersion"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "InputBucket",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "sagemaker:CreateTrainingJob"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "iam:PassRole"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "sageDispatch"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "OutputBucket": {
            "Properties": {
                "AccessControl": "Private",
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "ServerSideEncryptionByDefault": {
                                "KMSMasterKeyID": {
                                    "Fn::GetAtt": [
                                        "projectkey",
                                        "Arn"
                                    ]
                                },
                                "SSEAlgorithm": "aws:kms"
                            }
                        }
                    ]
                },
                "BucketName": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "accountparameter"
                            },
                            {
                                "Ref": "outputbucketparameter"
                            }
                        ]
                    ]
                },
                "VersioningConfiguration": {
                    "Status": "Enabled"
                }
            },
            "Type": "AWS::S3::Bucket"
        },
        "Repository": {
            "Properties": {
                "RepositoryDescription": "ML repo",
                "RepositoryName": {
                    "Ref": "reponameparameter"
                }
            },
            "Type": "AWS::CodeCommit::Repository"
        },
        "SagemakerExecutionRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "sagemaker.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "kms:Decrypt",
                                        "kms:GenerateDataKey"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::GetAtt": [
                                            "projectkey",
                                            "Arn"
                                        ]
                                    }
                                },
                                {
                                    "Action": [
                                        "s3:GetObject",
                                        "s3:PutObject",
                                        "s3:DeleteObject"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "InputBucket",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Fn::GetAtt": [
                                                            "OutputBucket",
                                                            "Arn"
                                                        ]
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Action": [
                                        "s3:CreateBucket",
                                        "s3:GetBucketLocation",
                                        "s3:ListBucket",
                                        "s3:ListAllMyBuckets"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "ecr:GetAuthorizationToken",
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:BatchGetImage",
                                        "ecr:BatchCheckLayerAvailability"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": {
                                        "Fn::Join": [
                                            "",
                                            [
                                                "arn:aws:ecr:",
                                                {
                                                    "Ref": "regionparameter"
                                                },
                                                ":",
                                                {
                                                    "Ref": "accountparameter"
                                                },
                                                ":repository/",
                                                {
                                                    "Ref": "mldockerregistrynameparameter"
                                                }
                                            ]
                                        ]
                                    }
                                },
                                {
                                    "Action": [
                                        "ecr:GetAuthorizationToken"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "cloudwatch:PutMetricData"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                },
                                {
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:DescribeLogStreams",
                                        "logs:GetLogEvents",
                                        "logs:PutLogEvents"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": [
                                        "arn:aws:logs:*:*:*"
                                    ]
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "SagemakerExecutionRole"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "build": {
            "Properties": {
                "Artifacts": {
                    "Type": "CODEPIPELINE"
                },
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "EnvironmentVariables": [
                        {
                            "Name": "AWS_DEFAULT_REGION",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "regionparameter"
                            }
                        },
                        {
                            "Name": "AWS_ACCOUNT_ID",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "accountparameter"
                            }
                        },
                        {
                            "Name": "IMAGE_REPO_NAME",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "mldockerregistrynameparameter"
                            }
                        },
                        {
                            "Name": "IMAGE_TAG",
                            "Type": "PLAINTEXT",
                            "Value": "latest"
                        },
                        {
                            "Name": "CODE_COMMIT_REPO",
                            "Type": "PLAINTEXT",
                            "Value": {
                                "Ref": "reponameparameter"
                            }
                        }
                    ],
                    "Image": "aws/codebuild/docker:17.09.0",
                    "Type": "LINUX_CONTAINER"
                },
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "accountparameter"
                            },
                            "build"
                        ]
                    ]
                },
                "ServiceRole": {
                    "Fn::GetAtt": [
                        "CodepipelineExecutionRole",
                        "Arn"
                    ]
                },
                "Source": {
                    "Type": "CODEPIPELINE"
                }
            },
            "Type": "AWS::CodeBuild::Project"
        },
        "mlpipelinerule": {
            "Properties": {
                "Description": "Triggers codepipeline",
                "EventPattern": {
                    "detail": {
                        "event": [
                            "referenceCreated",
                            "referenceUpdated"
                        ],
                        "referenceName": [
                            "master"
                        ],
                        "referenceType": [
                            "branch"
                        ]
                    },
                    "detail-type": [
                        "CodeCommit Repository State Change"
                    ],
                    "resources": [
                        {
                            "Fn::GetAtt": [
                                "Repository",
                                "Arn"
                            ]
                        }
                    ],
                    "source": [
                        "aws.codecommit"
                    ]
                },
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::Join": [
                                "",
                                [
                                    "arn:aws:codepipeline:",
                                    {
                                        "Ref": "regionparameter"
                                    },
                                    ":",
                                    {
                                        "Ref": "accountparameter"
                                    },
                                    ":",
                                    {
                                        "Ref": "pipeline"
                                    }
                                ]
                            ]
                        },
                        "Id": "mlTargert1",
                        "RoleArn": {
                            "Fn::GetAtt": [
                                "CloudWatchEventExecutionRole",
                                "Arn"
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::Events::Rule"
        },
        "mlrepo": {
            "Properties": {
                "RepositoryName": {
                    "Ref": "mldockerregistrynameparameter"
                }
            },
            "Type": "AWS::ECR::Repository"
        },
        "pipeline": {
            "Properties": {
                "ArtifactStore": {
                    "Location": {
                        "Ref": "CodePipelineBucket"
                    },
                    "Type": "S3"
                },
                "RoleArn": {
                    "Fn::GetAtt": [
                        "CodepipelineExecutionRole",
                        "Arn"
                    ]
                },
                "Stages": [
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Source",
                                    "Owner": "AWS",
                                    "Provider": "CodeCommit",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "BranchName": "master",
                                    "PollForSourceChanges": "false",
                                    "RepositoryName": {
                                        "Ref": "reponameparameter"
                                    }
                                },
                                "InputArtifacts": [],
                                "Name": "Source",
                                "OutputArtifacts": [
                                    {
                                        "Name": "source_action_output"
                                    }
                                ],
                                "RunOrder": 1
                            }
                        ],
                        "Name": "Source"
                    },
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Build",
                                    "Owner": "AWS",
                                    "Provider": "CodeBuild",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "ProjectName": {
                                        "Ref": "build"
                                    }
                                },
                                "InputArtifacts": [
                                    {
                                        "Name": "source_action_output"
                                    }
                                ],
                                "Name": "Build",
                                "OutputArtifacts": [
                                    {
                                        "Name": "build_action_output"
                                    }
                                ],
                                "RunOrder": 1
                            }
                        ],
                        "Name": "Build"
                    },
                    {
                        "Actions": [
                            {
                                "ActionTypeId": {
                                    "Category": "Invoke",
                                    "Owner": "AWS",
                                    "Provider": "Lambda",
                                    "Version": "1"
                                },
                                "Configuration": {
                                    "FunctionName": "sageDispatch"
                                },
                                "InputArtifacts": [
                                    {
                                        "Name": "source_action_output"
                                    }
                                ],
                                "Name": "Train",
                                "OutputArtifacts": [],
                                "RunOrder": 1
                            }
                        ],
                        "Name": "Train"
                    }
                ]
            },
            "Type": "AWS::CodePipeline::Pipeline"
        },
        "projectkey": {
            "Properties": {
                "Description": "Key used for ML pipeline",
                "EnableKeyRotation": "true",
                "Enabled": "true",
                "KeyPolicy": {
                    "Id": "mlkey",
                    "Statement": [
                        {
                            "Action": "kms:*",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {
                                    "Fn::Join": [
                                        ":",
                                        [
                                            "arn:aws:iam:",
                                            {
                                                "Ref": "AWS::AccountId"
                                            },
                                            "root"
                                        ]
                                    ]
                                }
                            },
                            "Resource": "*",
                            "Sid": "Enable IAM User Permissions"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            },
            "Type": "AWS::KMS::Key"
        },
        "sageDispatch": {
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Ref": "lambdafunctionbucketparameter"
                    },
                    "S3Key": "sageDispatch.zip"
                },
                "Environment": {
                    "Variables": {
                        "APP_BUNDLE": "source_action_output",
                        "BUCKET_KEY_ARN": {
                            "Fn::GetAtt": [
                                "projectkey",
                                "Arn"
                            ]
                        },
                        "CODE_COMMIT_REPO": {
                            "Ref": "reponameparameter"
                        },
                        "INPUT_BUCKET": {
                            "Fn::Join": [
                                "",
                                [
                                    "s3://",
                                    {
                                        "Ref": "InputBucket"
                                    },
                                    "/"
                                ]
                            ]
                        },
                        "LOG_LEVEL": {
                            "Ref": "loglevelparameter"
                        },
                        "OUTPUT_BUCKET": {
                            "Fn::Join": [
                                "",
                                [
                                    "s3://",
                                    {
                                        "Ref": "OutputBucket"
                                    },
                                    "/output/"
                                ]
                            ]
                        },
                        "SAGEMAKER_ROLE_ARN": {
                            "Fn::GetAtt": [
                                "SagemakerExecutionRole",
                                "Arn"
                            ]
                        },
                        "TRAINING_IMAGE": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "accountparameter"
                                    },
                                    ".dkr.ecr.",
                                    {
                                        "Ref": "regionparameter"
                                    },
                                    ".amazonaws.com/",
                                    {
                                        "Ref": "mldockerregistrynameparameter"
                                    }
                                ]
                            ]
                        }
                    }
                },
                "FunctionName": "sageDispatch",
                "Handler": "sageDispatch.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Runtime": "python2.7",
                "Timeout": 300
            },
            "Type": "AWS::Lambda::Function"
        }
    }
}